apiVersion: v1
kind: Template
labels:
  template: postgres-deploymentconfig
  app: sentry
metadata:
  name: postgres-deploymentconfig
  annotations:
    description: Selinon PostgreSQL
    openshift.io/display-name: PostgreSQL
    version: 1.0.0
objects:
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      service: postgres
      component: postgres
      app: sentry
    name: postgres
  spec:
    ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      service: postgres

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      service: postgres
      component: postgres
      app: sentry
    name: postgres
  spec:
    replicas: 1
    selector:
      service: postgres
    template:
      metadata:
        labels:
          service: postgres
          app: sentry
      spec:
        containers:
        - env:
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: sentry
                key: postgres-password
          - name: POSTGRESQL_USER
            valueFrom:
              configMapKeyRef:
                name: sentry
                key: postgres-user
          - name: POSTGRESQL_DATABASE
            valueFrom:
              configMapKeyRef:
                name: sentry
                key: postgres-database
          name: postgres
          ports:
            - containerPort: 5432
              protocol: TCP
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "750m"
          readinessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 5
            periodSeconds: 60
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: postgres-volume
        volumes:
        - name: postgres-volume
          persistentVolumeClaim:
            claimName: sentry-postgresql-pvc
    test: false
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - postgres
        from:
          kind: ImageStreamTag
          name: 'postgres:9.4'

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      volume.beta.kubernetes.io/storage-class: ceph-dyn-datahub-paas
    name: sentry-postgresql-pvc
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
